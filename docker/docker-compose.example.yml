services:
  web:
    container_name: governanceplatform-${NISINP_ENVIRONMENT?:err}
    image: ${NISINP_IMAGE:-ghcr.io/informed-governance-project/nisinp}:${NISINP_VERSION?:err}
    pull_policy: always
    environment: &env
      DEBUG: "false"
      POSTGRES_USER: "governanceplatform"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD?:err}"
      POSTGRES_DB: "governanceplatform"
      POSTGRES_HOST: "postgres"
      CELERY_BROKER_URL: 'redis://redis:6379/0'
      CELERY_RESULT_BACKEND: 'redis://redis:6379/1'
      SUPERUSER_EMAIL: "${SUPERUSER_EMAIL}" # not set if empty
      SUPERUSER_PASSWORD: "${SUPERUSER_PASSWORD}" # not set if empty
      MAIN_SITE: "${MAIN_SITE}" # not set if empty
      MAIN_SITE_NAME: "${MAIN_SITE_NAME}" # not set if empty
    ports:
      - "8888:8888"
    volumes:
      - ./volumes/config/config.py:/app/governanceplatform/config.py:ro
      - theme:/app/theme
      - shared_dir:/app/tmp
    restart: unless-stopped
  postgres:
    container_name: governanceplatform-postgres-${NISINP_ENVIRONMENT?:err}
    image: postgres:15
    environment: *env
    restart: unless-stopped
    volumes:
      - ./volumes/postgres/data:/var/lib/postgresql/data
      # enable the below volume if you want to load a pg_dump at init
      #- ./volumes/postgres/initdb.d:/docker-entrypoint-initdb.d
  theme:
    container_name: governanceplatform-theme-${NISINP_ENVIRONMENT?:err}
    image: ${THEME_IMAGE:-ghcr.io/informed-governance-project/default-theme}:${THEME_VERSION?:err}
    volumes:
      - theme:/app/theme
    restart: unless-stopped
  celery-worker:
    container_name: governanceplatform-celery-worker-${NISINP_ENVIRONMENT?:err}
    image: ${NISINP_IMAGE:-ghcr.io/informed-governance-project/nisinp}:${NISINP_VERSION?:err}
    pull_policy: always
    environment: *env
    command: worker
    volumes:
      - ./volumes/config/config.py:/app/governanceplatform/config.py:ro
      - theme:/app/theme
      - shared_dir:/app/tmp
  celery-beat:
    container_name: governanceplatform-celery-beat-${NISINP_ENVIRONMENT?:err}
    image: ${NISINP_IMAGE:-ghcr.io/informed-governance-project/nisinp}:${NISINP_VERSION?:err}
    pull_policy: always
    environment: *env
    command: beat
    volumes:
      - ./volumes/config/config.py:/app/governanceplatform/config.py:ro
  redis:
    container_name: governanceplatform-redis-${NISINP_ENVIRONMENT?:err}
    image: docker.io/redis:7-alpine
    volumes:
      - ./volumes/redis/data:/data

volumes:
  theme:
  shared_dir:
