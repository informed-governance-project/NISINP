# Generated by Django 5.1.3 on 2024-12-04 08:56

import django.db.models.deletion
from django.db import migrations, models
from django.db.models import Count


# remove the parent with child in the affected sectors
def delete_parent_with_child(apps, schema_editor):
    Sector = apps.get_model("governanceplatform", "Sector")
    sectors = Sector.objects.annotate(
                child_count=Count('children')
            ).filter(parent=None, child_count__gt=0)
    RegulatorUser = apps.get_model("governanceplatform", "RegulatorUser")
    CompanyUser = apps.get_model("governanceplatform", "CompanyUSer")
    Impact = apps.get_model("incidents", "Impact")
    SectorRegulation = apps.get_model("incidents", "SectorRegulation")

    rus = RegulatorUser.objects.filter(sectors__in=sectors).distinct()
    cus = CompanyUser.objects.filter(sectors__in=sectors).distinct()
    impacts = Impact.objects.filter(sectors__in=sectors).distinct()
    srs = SectorRegulation.objects.filter(sectors__in=sectors).distinct()

    for ru in rus:
        ru.sectors.remove(*sectors)
        ru.save()

    for cu in cus:
        cu.sectors.remove(*sectors)
        cu.save()

    for impact in impacts:
        impact.sectors.remove(*sectors)
        impact.save()

    for sr in srs:
        sr.sectors.remove(*sectors)
        sr.save()


class Migration(migrations.Migration):

    dependencies = [
        ("governanceplatform", "0036_passworduserhistory"),
    ]

    operations = [
        migrations.AlterField(
            model_name="sector",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="children",
                to="governanceplatform.sector",
                verbose_name="Parent",
            ),
        ),
        migrations.RunPython(delete_parent_with_child),

    ]
