# Generated by Django 5.1.2 on 2024-12-10 12:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("governanceplatform", "0037_alter_sector_parent"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="company",
            options={"verbose_name": "Operator", "verbose_name_plural": "Operators"},
        ),
        migrations.AlterModelOptions(
            name="regulator",
            options={"verbose_name": "Regulator", "verbose_name_plural": "Regulators"},
        ),
        migrations.AlterModelOptions(
            name="regulatortranslation",
            options={
                "default_permissions": (),
                "managed": True,
                "verbose_name": "Regulator Translation",
            },
        ),
        migrations.AlterField(
            model_name="company",
            name="email",
            field=models.CharField(
                blank=True,
                default=None,
                max_length=100,
                null=True,
                verbose_name="Email address",
            ),
        ),
        migrations.AlterField(
            model_name="companyuser",
            name="company",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="governanceplatform.company",
                verbose_name="Operator",
            ),
        ),
        migrations.AlterField(
            model_name="observer",
            name="is_receiving_all_incident",
            field=models.BooleanField(
                default=False, verbose_name="Receives all incident notifications"
            ),
        ),
        migrations.AlterField(
            model_name="observerregulation",
            name="regulation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="governanceplatform.regulation",
                verbose_name="Legal basis",
            ),
        ),
        migrations.AlterField(
            model_name="regulation",
            name="regulators",
            field=models.ManyToManyField(
                blank=True,
                default=None,
                to="governanceplatform.regulator",
                verbose_name="Regulators",
            ),
        ),
        migrations.AlterField(
            model_name="regulatoruser",
            name="regulator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="governanceplatform.regulator",
                verbose_name="Regulator",
            ),
        ),
        migrations.AlterField(
            model_name="sector",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="children",
                to="governanceplatform.sector",
                verbose_name="Parent Sector",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="companies",
            field=models.ManyToManyField(
                through="governanceplatform.CompanyUser",
                to="governanceplatform.company",
                verbose_name="Operators",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="email",
            field=models.EmailField(
                error_messages={
                    "unique": "An account with this email address already exists."
                },
                max_length=254,
                unique=True,
                verbose_name="Email address",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="is_staff",
            field=models.BooleanField(
                default=False,
                help_text="Determines if the user can log in via the administration interface.",
                verbose_name="Administrator",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="regulators",
            field=models.ManyToManyField(
                through="governanceplatform.RegulatorUser",
                to="governanceplatform.regulator",
                verbose_name="Regulators",
            ),
        ),
    ]
